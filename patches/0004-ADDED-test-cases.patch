From dac9fdc462952ad82b141c8e555ff2a59669ff3f Mon Sep 17 00:00:00 2001
From: Nakzz <naqibprio10@gmail.com>
Date: Sat, 9 May 2020 19:49:27 +0000
Subject: [PATCH 4/6] ADDED: test cases

---
 client_test.py | 74 ++++++++++++++++++++++++++++++++++++++++++++++----
 1 file changed, 69 insertions(+), 5 deletions(-)

diff --git a/client_test.py b/client_test.py
index aff160c..8194224 100644
--- a/client_test.py
+++ b/client_test.py
@@ -1,5 +1,5 @@
 import unittest
-from client import getDataPoint
+from client import *
 
 class ClientTest(unittest.TestCase):
   def test_getDataPoint_calculatePrice(self):
@@ -8,19 +8,83 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
- #TODO
-  
+    for quote in quotes:
+        self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price'])/2 ))
+
+    print("test_getDataPoint_calculatePrice() done")
+
+
   def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
     quotes = [
       {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
-    # TODO
+    for quote in quotes:
+        self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price'])/2 ))
+  
+    print("test_getDataPoint_calculatePriceBidGreaterThanAsk() done")
 
   """ ------------ Add more unit tests ------------ """
-  def test)
+  def test_getDataPoint_checkDecimal(self):
+    quotes = [
+      {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
+      {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+    ]
+    
+    for quote in quotes:
+        self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price'])/2 ))
+  
+    print("test_getDataPoint_checkDecimal() done")
 
 
+  def test_getDataPoint_checkNull(self):
+    quotes = [
+      {'top_ask': {'price': None, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': None, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
+      {'top_ask': {'price': None, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': None, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+    ]
+
+    for quote in quotes:
+        self.assertEqual(getDataPoint(quote),(quote['stock'], 0, 0, 0 ))
+  
+    print("test_getDataPoint_checkNull() done")
+
+
+  def test_getRatio_checkDecimal(self):
+    prices = [
+      [100,2.5],
+      [100,3],
+      [100,0.99]
+    ]
+
+    for price in prices:
+      self.assertEqual(getRatio(price[0], price[1]), float(price[0])/price[1] )
+    
+    print("test_getRatio_checkDecimal() done")
+
+
+  def test_getRatio_zeroDivision(self):
+    prices = [
+      [100,0],
+      [100,0.0],
+    ]
+
+    for price in prices:
+      self.assertEqual(getRatio(price[0], price[1]), None )
+  
+    print("test_getRatio_zeroDivision() done")
+
+
+  def test_getRatio_checkNull(self):
+    prices = [
+      [100,None],
+      [100,None],
+    ]
+
+    for price in prices:
+      self.assertEqual(getRatio(price[0], price[1]), None )
+  
+    print("test_getRatio_checkNull() done")
+
 if __name__ == '__main__':
     unittest.main()
-- 
2.17.1

